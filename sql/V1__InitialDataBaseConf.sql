CREATE DATABASE clientdatabase;

CREATE ROLE client  WITH
    LOGIN NOSUPERUSER NOINHERIT NOCREATEDB NOCREATEROLE PASSWORD 'client123';

GRANT CONNECT ON DATABASE clientdatabase TO client;
GRANT SELECT, INSERT, UPDATE ON ALL TABLES IN SCHEMA public TO client;
GRANT EXECUTE ON ALL FUNCTIONS IN SCHEMA public TO client;

CREATE TABLE IF NOT EXISTS users (
    usrid SERIAL PRIMARY KEY,
    usrnom VARCHAR(75) NOT NULL,
    usrape VARCHAR(75) NOT NULL,
    usrmail VARCHAR(50) NOT NULL UNIQUE,
    usrpws VARCHAR(100) NOT NULL,
    usrtel VARCHAR(12) NOT NULL UNIQUE,
    usrdir VARCHAR(150) NOT NULL,
    usrcui VARCHAR(13) NOT NULL UNIQUE,
    usrnit VARCHAR(12) NOT NULL UNIQUE,
    usrest CHAR(1) DEFAULT 'A',
    usrsys TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    usrupd TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

CREATE INDEX IDX_USERS_1 ON users(usrcui,usrnit,usrsys,usrupd);
CREATE INDEX IDX_USERS_2 ON users(usrest) WHERE usrest = 'A';

CREATE OR REPLACE FUNCTION FUNC_USERS_USRUPD ()
RETURNS TRIGGER AS $$
BEGIN
    NEW.usrupd := CURRENT_TIMESTAMP;
RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER TR_USERS_USRUPD
AFTER UPDATE ON users
    FOR EACH ROW
    EXECUTE FUNCTION FUNC_USERS_USRUPD();

-- CREATE SEQUENCE IF NOT EXISTS SEQ_USERS_ID AS INT
--    INCREMENT BY 1 START WITH 1 OWNED BY users.usrid;

SELECT * FROM pg_stat_activity;
